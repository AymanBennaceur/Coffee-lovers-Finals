{"ast":null,"code":"var _jsxFileName = \"/Users/aymanbennaceur/Desktop/uOttawa/2nd year/SUMMER 2022/SEG3125/Project2/coffee-lovers/src/components/feedback.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum so don't be a dick\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join the Discussion!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this._addComment.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"comment-reveal\",\n        onClick: this._handleClick.bind(this),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-count\",\n        children: this._getCommentsTitle(comments.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), commentNodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        body: comment.body\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          required: true,\n          ref: input => this._author = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 94\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Comment\",\n          rows: \"4\",\n          required: true,\n          ref: textarea => this._body = textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-header\",\n        children: this.props.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-body\",\n        children: [\"- \", this.props.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"comment-footer-delete\",\n          onClick: this._deleteComment,\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(CommentBox, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 120,\n  columnNumber: 19\n}, this), document.getElementById('main'));","map":{"version":3,"names":["CommentBox","React","Component","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert","ReactDOM","document","getElementById"],"sources":["/Users/aymanbennaceur/Desktop/uOttawa/2nd year/SUMMER 2022/SEG3125/Project2/coffee-lovers/src/components/feedback.js"],"sourcesContent":["class CommentBox extends React.Component {\n    constructor() {\n      super();\n      \n      this.state = {\n        showComments: false,\n        comments: [\n          {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\n          {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\n          {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\n        ]\n      };\n    }\n    \n    render () {\n      const comments = this._getComments();\n      let commentNodes;\n      let buttonText = 'Show Comments';\n      \n      if (this.state.showComments) {\n        buttonText = 'Hide Comments';\n        commentNodes = <div className=\"comment-list\">{comments}</div>;\n      }\n      \n      return(\n        <div className=\"comment-box\">\n          <h2>Join the Discussion!</h2>\n          <CommentForm addComment={this._addComment.bind(this)}/>\n          <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\n            {buttonText}\n          </button>\n          <h3>Comments</h3>\n          <h4 className=\"comment-count\">\n            {this._getCommentsTitle(comments.length)}\n          </h4>\n          {commentNodes}\n        </div>  \n      );\n    } // end render\n    \n    _addComment(author, body) {\n      const comment = {\n        id: this.state.comments.length + 1,\n        author,\n        body\n      };\n      this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\n    }\n    \n    _handleClick() {\n      this.setState({\n        showComments: !this.state.showComments\n      });\n    }\n    \n    _getComments() {    \n      return this.state.comments.map((comment) => { \n        return (\n          <Comment \n            author={comment.author} \n            body={comment.body} \n            key={comment.id} />\n        ); \n      });\n    }\n    \n    _getCommentsTitle(commentCount) {\n      if (commentCount === 0) {\n        return 'No comments yet';\n      } else if (commentCount === 1) {\n        return \"1 comment\";\n      } else {\n        return `${commentCount} comments`;\n      }\n    }\n  } // end CommentBox component\n  \n  class CommentForm extends React.Component {\n    render() {\n      return (\n        <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\n          <div className=\"comment-form-fields\">\n            <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\n            <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\n          </div>\n          <div className=\"comment-form-actions\">\n            <button type=\"submit\">Post Comment</button>\n          </div>\n        </form>\n      );\n    } // end render\n    \n    _handleSubmit(event) { \n      event.preventDefault();   // prevents page from reloading on submit\n      let author = this._author;\n      let body = this._body;\n      this.props.addComment(author.value, body.value);\n    }\n  } // end CommentForm component\n  \n  class Comment extends React.Component {\n    render () {\n      return(\n        <div className=\"comment\">\n          <p className=\"comment-header\">{this.props.author}</p>\n          <p className=\"comment-body\">- {this.props.body}</p>\n          <div className=\"comment-footer\">\n            <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\n          </div>\n        </div>\n      );\n    }\n    _deleteComment() {\n      alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n    }\n  }\n  \n  \n  \n  ReactDOM.render(<CommentBox />, document.getElementById('main'));"],"mappings":";;;AAAA,MAAMA,UAAN,SAAyBC,KAAK,CAACC,SAA/B,CAAyC;EACrCC,WAAW,GAAG;IACZ;IAEA,KAAKC,KAAL,GAAa;MACXC,YAAY,EAAE,KADH;MAEXC,QAAQ,EAAE,CACR;QAACC,EAAE,EAAE,CAAL;QAAQC,MAAM,EAAE,YAAhB;QAA8BC,IAAI,EAAE;MAApC,CADQ,EAER;QAACF,EAAE,EAAE,CAAL;QAAQC,MAAM,EAAE,aAAhB;QAA+BC,IAAI,EAAE;MAArC,CAFQ,EAGR;QAACF,EAAE,EAAE,CAAL;QAAQC,MAAM,EAAE,OAAhB;QAAyBC,IAAI,EAAE;MAA/B,CAHQ;IAFC,CAAb;EAQD;;EAEDC,MAAM,GAAI;IACR,MAAMJ,QAAQ,GAAG,KAAKK,YAAL,EAAjB;;IACA,IAAIC,YAAJ;IACA,IAAIC,UAAU,GAAG,eAAjB;;IAEA,IAAI,KAAKT,KAAL,CAAWC,YAAf,EAA6B;MAC3BQ,UAAU,GAAG,eAAb;MACAD,YAAY,gBAAG;QAAK,SAAS,EAAC,cAAf;QAAA,UAA+BN;MAA/B;QAAA;QAAA;QAAA;MAAA,QAAf;IACD;;IAED,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAa,UAAU,EAAE,KAAKQ,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;MAAzB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,EAAE,EAAC,gBAAX;QAA4B,OAAO,EAAE,KAAKC,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAArC;QAAA,UACGF;MADH;QAAA;QAAA;QAAA;MAAA,QAHF,eAME;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAI,SAAS,EAAC,eAAd;QAAA,UACG,KAAKI,iBAAL,CAAuBX,QAAQ,CAACY,MAAhC;MADH;QAAA;QAAA;QAAA;MAAA,QAPF,EAUGN,YAVH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD,CAtCoC,CAsCnC;;;EAEFE,WAAW,CAACN,MAAD,EAASC,IAAT,EAAe;IACxB,MAAMU,OAAO,GAAG;MACdZ,EAAE,EAAE,KAAKH,KAAL,CAAWE,QAAX,CAAoBY,MAApB,GAA6B,CADnB;MAEdV,MAFc;MAGdC;IAHc,CAAhB;IAKA,KAAKW,QAAL,CAAc;MAAEd,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBe,MAApB,CAA2B,CAACF,OAAD,CAA3B;IAAZ,CAAd,EANwB,CAM4C;EACrE;;EAEDH,YAAY,GAAG;IACb,KAAKI,QAAL,CAAc;MACZf,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;IADd,CAAd;EAGD;;EAEDM,YAAY,GAAG;IACb,OAAO,KAAKP,KAAL,CAAWE,QAAX,CAAoBgB,GAApB,CAAyBH,OAAD,IAAa;MAC1C,oBACE,QAAC,OAAD;QACE,MAAM,EAAEA,OAAO,CAACX,MADlB;QAEE,IAAI,EAAEW,OAAO,CAACV;MAFhB,GAGOU,OAAO,CAACZ,EAHf;QAAA;QAAA;QAAA;MAAA,QADF;IAMD,CAPM,CAAP;EAQD;;EAEDU,iBAAiB,CAACM,YAAD,EAAe;IAC9B,IAAIA,YAAY,KAAK,CAArB,EAAwB;MACtB,OAAO,iBAAP;IACD,CAFD,MAEO,IAAIA,YAAY,KAAK,CAArB,EAAwB;MAC7B,OAAO,WAAP;IACD,CAFM,MAEA;MACL,OAAQ,GAAEA,YAAa,WAAvB;IACD;EACF;;AA1EoC,C,CA2ErC;;;AAEF,MAAMC,WAAN,SAA0BvB,KAAK,CAACC,SAAhC,CAA0C;EACxCQ,MAAM,GAAG;IACP,oBACE;MAAM,SAAS,EAAC,cAAhB;MAA+B,QAAQ,EAAE,KAAKe,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB,CAAzC;MAAA,wBACE;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACE;UAAO,WAAW,EAAC,MAAnB;UAA0B,QAAQ,MAAlC;UAAmC,GAAG,EAAGW,KAAD,IAAW,KAAKC,OAAL,GAAeD;QAAlE;UAAA;UAAA;UAAA;QAAA,QADF,eACmF;UAAA;UAAA;UAAA;QAAA,QADnF,eAEE;UAAU,WAAW,EAAC,SAAtB;UAAgC,IAAI,EAAC,GAArC;UAAyC,QAAQ,MAAjD;UAAkD,GAAG,EAAGE,QAAD,IAAc,KAAKC,KAAL,GAAaD;QAAlF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD,CAbuC,CAatC;;;EAEFH,aAAa,CAACK,KAAD,EAAQ;IACnBA,KAAK,CAACC,cAAN,GADmB,CACO;;IAC1B,IAAIvB,MAAM,GAAG,KAAKmB,OAAlB;IACA,IAAIlB,IAAI,GAAG,KAAKoB,KAAhB;IACA,KAAKG,KAAL,CAAWC,UAAX,CAAsBzB,MAAM,CAAC0B,KAA7B,EAAoCzB,IAAI,CAACyB,KAAzC;EACD;;AApBuC,C,CAqBxC;;;AAEF,MAAMC,OAAN,SAAsBlC,KAAK,CAACC,SAA5B,CAAsC;EACpCQ,MAAM,GAAI;IACR,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAG,SAAS,EAAC,gBAAb;QAAA,UAA+B,KAAKsB,KAAL,CAAWxB;MAA1C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,SAAS,EAAC,cAAb;QAAA,iBAA+B,KAAKwB,KAAL,CAAWvB,IAA1C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE;UAAG,IAAI,EAAC,GAAR;UAAY,SAAS,EAAC,uBAAtB;UAA8C,OAAO,EAAE,KAAK2B,cAA5D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;EACDA,cAAc,GAAG;IACfC,KAAK,CAAC,iDAAD,CAAL;EACD;;AAdmC;;AAmBtCC,QAAQ,CAAC5B,MAAT,eAAgB,QAAC,UAAD;EAAA;EAAA;EAAA;AAAA,QAAhB,EAAgC6B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC"},"metadata":{},"sourceType":"module"}